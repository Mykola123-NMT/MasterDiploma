// <auto-generated />
using System;
using Diploma.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diploma.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241116101719_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Diploma.Server.Models.ConsensusEvaluation", b =>
                {
                    b.Property<int>("ConsensusEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsensusEvaluationId"));

                    b.Property<double>("Demand")
                        .HasColumnType("float");

                    b.Property<double>("PriceQuality")
                        .HasColumnType("float");

                    b.Property<double>("PriceStrategy")
                        .HasColumnType("float");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quality")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ConsensusEvaluationId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ConsensusEvaluations");
                });

            modelBuilder.Entity("Diploma.Server.Models.ExpertEvaluation", b =>
                {
                    b.Property<int>("EvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvaluationId"));

                    b.PrimitiveCollection<string>("Advantages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Demand")
                        .HasColumnType("float");

                    b.PrimitiveCollection<string>("Disadvantages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<double>("PriceQuality")
                        .HasColumnType("float");

                    b.Property<double>("PriceStrategy")
                        .HasColumnType("float");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quality")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("EvaluationId");

                    b.HasIndex("ExpertId");

                    b.HasIndex("ProductId");

                    b.ToTable("ExpertEvaluations");
                });

            modelBuilder.Entity("Diploma.Server.Models.LLMExpert", b =>
                {
                    b.Property<int>("ExpertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpertId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpertId");

                    b.ToTable("LLMExperts");
                });

            modelBuilder.Entity("Diploma.Server.Models.Product", b =>
                {
                    b.Property<string>("Asin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("BoughtLastMonth")
                        .HasColumnType("float");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBestSeller")
                        .HasColumnType("bit");

                    b.Property<double?>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double?>("LogPrice")
                        .HasColumnType("float");

                    b.Property<double?>("LogReviews")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Reviews")
                        .HasColumnType("int");

                    b.Property<double?>("Stars")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Asin");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Diploma.Server.Models.ConsensusEvaluation", b =>
                {
                    b.HasOne("Diploma.Server.Models.Product", "Product")
                        .WithOne("ConsensusEvaluation")
                        .HasForeignKey("Diploma.Server.Models.ConsensusEvaluation", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Diploma.Server.Models.ExpertEvaluation", b =>
                {
                    b.HasOne("Diploma.Server.Models.LLMExpert", "Expert")
                        .WithMany("ExpertEvaluations")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diploma.Server.Models.Product", "Product")
                        .WithMany("ExpertEvaluations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expert");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Diploma.Server.Models.LLMExpert", b =>
                {
                    b.Navigation("ExpertEvaluations");
                });

            modelBuilder.Entity("Diploma.Server.Models.Product", b =>
                {
                    b.Navigation("ConsensusEvaluation");

                    b.Navigation("ExpertEvaluations");
                });
#pragma warning restore 612, 618
        }
    }
}
